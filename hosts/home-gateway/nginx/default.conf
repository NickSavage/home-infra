map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      "";
}

server {
    listen 127.0.0.1:8080;

    location /metrics {
        stub_status on;
        allow 127.0.0.1;  # Allow access from localhost
        deny all;         # Deny access to everyone else
    }
}

server {
    if ($host = nicksavage.ca) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name nicksavage.ca;
    return 404; # managed by Certbot
}
server {
    server_name immich.nicksavage.ca;

    # allow large file uploads
    client_max_body_size 50000M;

    # Set headers
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # enable websockets: http://nginx.org/en/docs/http/websocket.html
    proxy_http_version 1.1;
    proxy_set_header   Upgrade    $http_upgrade;
    proxy_set_header   Connection "upgrade";
    proxy_redirect     off;

    # set timeout
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    send_timeout       600s;

    access_log /var/log/nginx/immich.access.log;
    error_log /var/log/nginx/nicksavage.error.log;

    location / {
        proxy_pass http://192.168.0.162:2283;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/immich.nicksavage.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/immich.nicksavage.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
        server_name nicksavage.ca;
        root /var/www/html;
        client_max_body_size 500m;

        index index.html index.php;

        #        proxy_redirect off;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        access_log /var/log/nginx/nicksavage.access.log;
        error_log /var/log/nginx/nicksavage.error.log;

        location /stats {
                auth_basic "Statistics Area";
                auth_basic_user_file /etc/nginx/.htpasswd;
                alias /var/www/html/stats;  # Create this directory
                index stats.html;
        }


        location /nextcloud {
                proxy_pass                      http://192.168.0.155;
                access_log /var/log/nginx/nextcloud.access.log;
                error_log /var/log/nginx/nextcloud.error.log;
        }

                location = /.well-known/carddav     { return 301 /nextcloud/remote.php/dav/; }
               location = /.well-known/caldav      { return 301 /nextcloud/remote.php/dav/; }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/immich.nicksavage.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/immich.nicksavage.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot









}

server {
       # listen 443 ssl;
        server_name jellyfin.nicksavage.ca;
    # ssl_certificate /etc/letsencrypt/live/vault.nicksavage.ca/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/vault.nicksavage.ca/privkey.pem; # managed by Certbot

        location / {
                #auth_basic "Password Required";
                #auth_basic_user_file /etc/nginx/.htpasswd;
                proxy_redirect off;
                proxy_set_header        X-Forwarded-Host $host;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
                proxy_pass      http://192.168.0.162:8096/;

        }





    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/immich.nicksavage.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/immich.nicksavage.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot









}

server {
      server_name home.nicksavage.ca;
      location / {
                proxy_pass      https://192.168.0.162:8123;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
        location /api/websocket {
                proxy_pass https://192.168.0.162:8123/api/websocket;
                proxy_set_header Host $host;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

        }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/immich.nicksavage.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/immich.nicksavage.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



}
server {
    listen 80;
    listen [::]:80;
    server_name ai.nicksavage.ca;

    if ($host = ai.nicksavage.ca) {
        return 301 https://$host$request_uri;
    }
    return 404;


}

server {
      server_name ai.nicksavage.ca;
      location / {
                proxy_pass      http://192.168.0.162:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

        client_max_body_size 50m;
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/immich.nicksavage.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/immich.nicksavage.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



}

server {
    if ($host = vault.nicksavage.ca) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    server_name vault.nicksavage.ca;

    if ($host = vaultwarden.nicksavage.ca) {
        return 301 https://$host$request_uri;
    }
    return 404;


}

server {
      server_name vault.nicksavage.ca;
      location / {
                proxy_pass      http://192.168.0.162:32768;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/immich.nicksavage.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/immich.nicksavage.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



}
server {
    if ($host = jellyfin.nicksavage.ca) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name jellyfin.nicksavage.ca;
    return 404; # managed by Certbot


}
server {
    if ($host = immich.nicksavage.ca) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name immich.nicksavage.ca;
    listen 80;
    return 404; # managed by Certbot


}